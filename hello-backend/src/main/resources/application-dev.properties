# Allows JPA (Our ORM) to interface with the database; more on JPA in the next branch
spring.datasource.url=jdbc:h2:mem:testdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.H2Dialect
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
# Allows flyway to connect to the database and set up the schema/create the tables
spring.flyway.enabled=true
spring.flyway.driver-class-name=org.h2.Driver
spring.flyway.url=jdbc:h2:mem:testdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# Provides migration scripts to create the tables; these tables are used by the ORM
spring.flyway.locations=classpath:db/migration
spring.flyway.user=sa
spring.flyway.password=

# Enables the H2 console; view the console at localhost:8080/h2-console (username "sa", password "")
spring.h2.console.path=/h2-console
spring.h2.console.enabled=true

# Sets the port for our app; optional default is 8080
server.port=8080