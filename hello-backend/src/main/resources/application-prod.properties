# Allows JPA (Our ORM) to interface with the database; more on JPA in the next branch
spring.datasource.url=jdbc:postgresql://${HOST}:${PORT}/${DATABASE}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${USERNAME}
spring.datasource.password=${PASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Allows flyway to connect to the database and set up the schema/create the tables
spring.flyway.enabled=true
spring.flyway.driver-class-name=org.postgresql.Driver
spring.flyway.url=jdbc:postgresql://${HOST}:${PORT}/${DATABASE}
# Provides migration scripts to create the tables; these tables are used by the ORM
spring.flyway.locations=classpath:db/migration
spring.flyway.user=${USERNAME}
spring.flyway.password=${PASSWORD}

# Sets the port for our app; optional default is 8080
server.port=8080

frontend.url=http://localhost:9000